package edu.umich.eecs.soar.props.karbachkray;

import java.util.ArrayList;
import edu.umich.eecs.soar.propsutil.LearnConfig;

public class SMLClient {
	private static ArrayList<Double> generateParamSweep(double start, double end, double step) {
		ArrayList<Double> retval = new ArrayList<Double>();
		double eps = 0.00001;
		
		// Sweep through cmd1
		double curPos = start;
		while (curPos <= end + eps) {
			retval.add(curPos);
			curPos += step;
		}
		
		return retval;
	}
	
	public static void main(String[] args) {
		
		ArrayList<LearnConfig> expList = new ArrayList<LearnConfig>();
		/*
		ArrayList<Double> cmd1vals = generateParamSweep(0.02, 0.2, 0.02);
		ArrayList<Double> cmd2vals = generateParamSweep(0.7, 0.9, 0.05);
		for (Double val1 : cmd1vals) {
			for (Double val2 : cmd2vals) {
			ArrayList<String> cmds = new ArrayList<String>();
			
				cmds.add("rl --set learning-rate " + val1);
				cmds.add("rl --set discount-rate " + val2);

				expList.add(new LearnConfig("12", 1, cmds, String.format("_lr%02d_dr%02d", (int)(val1*100), (int)(val2*100))));
			}
		}*/
		expList.add(new LearnConfig("12", 1, null, "_nocondrl_lr02_dr775"));
		//expList.add(new LearnConfig("123se", 10));

		KKWorld world = new KKWorld();
		
		//world.testStroop();
		
		world.setVerbose(false);
		world.setPrintProgress(false);
		world.runKKExperiment("kk_props", 4, expList);
		
		//world.setSavePercepts(true);
		//world.runDebug("procedure-a","procedure-a", new LearnConfig("2", 2));

	}

}
